name: ci

on:
  push:
    branches:
      - master
  pull_request:

permissions:
  contents: read

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: BeeeQueue/setup-node@corepack
        with:
          node-version: 18
          corepack: true

      - name: find pnpm cache path
        id: cache
        run: echo "::set-output name=path::$(pnpm store path)"

      - uses: actions/cache@v4
        with:
          path: ${{ steps.cache.outputs.path }}
          key: v1-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            v1-pnpm-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - run: pnpm lint --format compact

  typecheck:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: BeeeQueue/setup-node@corepack
        with:
          node-version: 18
          corepack: true

      - name: find pnpm cache path
        id: cache
        run: echo "::set-output name=path::$(pnpm store path)"

      - uses: actions/cache@v4
        with:
          path: ${{ steps.cache.outputs.path }}
          key: v1-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            v1-pnpm-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - run: pnpm typecheck

  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: BeeeQueue/setup-node@corepack
        with:
          node-version: 18
          corepack: true

      - name: find pnpm cache path
        id: cache
        run: echo "::set-output name=path::$(pnpm store path)"

      - uses: actions/cache@v4
        with:
          path: ${{ steps.cache.outputs.path }}
          key: v1-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            v1-pnpm-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - run: pnpm build

      - name: Upload artifacts
        if: github.ref == 'refs/heads/master'
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist

  deploy:
    if: github.ref == 'refs/heads/master'
    needs: [build, lint, typecheck]
    runs-on: ubuntu-latest

    environment:
      name: github-pages
      url: "stratroulette.net"
    permissions:
      contents: write
    concurrency:
      group: deployment
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v3

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: dist
          silent: true
